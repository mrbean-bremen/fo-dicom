name: build

on:
  push:
    branches:
    - development
  pull_request:
    branches:
    - development
  workflow_dispatch:

jobs:  
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        # framework: ["net462", "net6.0-windows", "net8.0-windows"]
        framework: ["net8.0-windows"]
    steps:
    - uses: actions/checkout@v4
    - name: Test FO-DICOM.Tests
      if: ${{ matrix.framework != 'net8.0-windows' }}
      run: dotnet test ./Tests/FO-DICOM.Tests/FO-DICOM.Tests.csproj --configuration Release --framework ${{ matrix.framework }} --blame --runtime win-x64 --logger:"trx;LogFileName=.\results${{ matrix.framework }}.xml"
    - name: Test FO-DICOM.Tests with Coverage
      if: ${{ matrix.framework == 'net8.0-windows' }}
      run: dotnet test ./Tests/FO-DICOM.Tests/FO-DICOM.Tests.csproj --configuration Release --framework ${{ matrix.framework }} --blame --runtime win-x64 --logger:"trx;LogFileName=.\results${{ matrix.framework }}.xml" --collect:"XPlat Code Coverage" --settings coverlet.runsettings
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
          name: test-v5-${{ matrix.framework }}.xml
          path: ./Tests/FO-DICOM.Tests/TestResults/results${{ matrix.framework }}.xml
    - name: Test FO-DICOM.Tests.Windows
      if: ${{ matrix.framework != 'net8.0-windows' }}
      run: dotnet test ./Tests/FO-DICOM.Tests.Windows/FO-DICOM.Tests.Windows.csproj --configuration Release --framework ${{ matrix.framework }} --blame --runtime win-x64 --logger:"trx;LogFileName=.\resultswin${{ matrix.framework }}.xml"
    - name: Test FO-DICOM.Tests.Windows with Coverage
      if: false
      # if: ${{ matrix.framework == 'net8.0-windows' }}
      run: dotnet test ./Tests/FO-DICOM.Tests.Windows/FO-DICOM.Tests.Windows.csproj --configuration Release --framework ${{ matrix.framework }} --blame --runtime win-x64 --logger:"trx;LogFileName=.\resultswin${{ matrix.framework }}.xml" --collect:"XPlat Code Coverage" --settings coverlet.runsettings
    - name: Upload test results
      if: false
      uses: actions/upload-artifact@v4
      with:
          name: test-v5-${{ matrix.framework }}.xml
          path: ./Tests/FO-DICOM.Tests/TestResults/resultswin${{ matrix.framework }}.xml
    - name: Debugging
      run: tree /f
    - name: Upload code coverage
      if: ${{ matrix.framework == 'net8.0-windows' }}
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  
  benchmarks:
    runs-on: windows-2022
    if: false
    steps:
    - uses: actions/checkout@v4
    - name: Build FO-DICOM..Benchmark
      run: dotnet build ./Tests/FO-DICOM.Benchmark/FO-DICOM.Benchmark.csproj --configuration Release --framework net8.0
    - name: run benchmarks
      run: ./Tests/FO-DICOM.Benchmark/bin/Release/net8.0/fo-dicom.Benchmark.exe
    - name: Upload benchmark log
      uses: actions/upload-artifact@v4
      with:
        name: benchmark
        path: |
          ./BenchmarkDotNet.Artifacts/
          ./BenchmarkDotNet.Artifacts/results/
 