name: build

on:
  push:
    branches:
    - development
  pull_request:
    branches:
    - development
  workflow_dispatch:

jobs:  
  tests:
    runs-on: ${{ matrix.os.ver }}
    strategy:
      fail-fast: false
      matrix:
        os: [
            { name: Windows, ver: windows-2022, runtime: win-x64 },
            { name: Ubuntu, ver: ubuntu-22.04, runtime: linux-x64 },
            { name: macOS, ver: macOS-latest, runtime: osx-arm64 }
          ]
        frameworks: [
            { name: ".NET 6.0", common: "net6.0", win: "net6.0-windows", coverage: '' },
            { name: ".NET 8.0", common: "net8.0", win: "net8.0-windows", coverage: '--collect:"XPlat Code Coverage" --settings coverlet.runsettings' }
          ]
        include:
          - frameworks: { name: ".NET Framework 4.6.2", common: "net462", win: "net462", coverage: "" }
            os: { name: Windows, ver: windows-2022, runtime: win-x64 }
        exclude:
          # .NET 6 not available for macOS arm architecture
          - frameworks: { name: ".NET 6.0", common: "net6.0", win: "net6.0-windows", coverage: '' }
            os: { name: macOS, ver: macOS-latest, runtime: osx-arm64 }

    name: ${{ matrix.os.name }} (${{ matrix.frameworks.name }})
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:
    - uses: actions/checkout@v4
    - name: Test FO-DICOM.Tests
      run: dotnet test ./Tests/FO-DICOM.Tests/FO-DICOM.Tests.csproj --configuration Release --framework ${{ matrix.frameworks.common }} --blame --runtime ${{ matrix.os.runtime }} --logger:"trx;LogFileName=.\results-${{ matrix.os.name }}-${{ matrix.frameworks.common }}.xml" ${{ matrix.frameworks.coverage }}
    - name: Upload test results
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
          name: test-v5-${{ matrix.os.name }}-${{ matrix.frameworks.common }}.xml
          path: ./Tests/FO-DICOM.Tests/TestResults/results-${{ matrix.os.name }}-${{ matrix.frameworks.common }}.xml
    - name: Test FO-DICOM.Tests.Windows
      if: matrix.os.name == 'Windows'
      run: dotnet test ./Tests/FO-DICOM.Tests.Windows/FO-DICOM.Tests.Windows.csproj --configuration Release --framework ${{ matrix.frameworks.win }} --blame --runtime win-x64 --logger:"trx;LogFileName=.\results-win-${{ matrix.frameworks.common }}.xml" ${{ matrix.frameworks.coverage }}
    - name: Upload test results
      if: matrix.os.name == 'Windows'
      uses: actions/upload-artifact@v4
      with:
          name: test-v5-win-${{ matrix.frameworks.win }}.xml
          path: ./Tests/FO-DICOM.Tests.Windows/TestResults/results-win-${{ matrix.frameworks.common }}.xml
    - name: Upload code coverage
      if: matrix.frameworks.coverage != ''
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmarks:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
    - name: Build FO-DICOM..Benchmark
      run: dotnet build ./Tests/FO-DICOM.Benchmark/FO-DICOM.Benchmark.csproj --configuration Release --framework net8.0
    - name: run benchmarks
      run: ./Tests/FO-DICOM.Benchmark/bin/Release/net8.0/fo-dicom.Benchmark.exe
    - name: Upload benchmark log
      uses: actions/upload-artifact@v4
      with:
        name: benchmark
        path: |
          ./BenchmarkDotNet.Artifacts/
          ./BenchmarkDotNet.Artifacts/results/
 